{"version":3,"sources":["Componenets/ContactList/ContactListStyled.jsx","Componenets/ContactList/ContactListItem/ContactListItemStyled.jsx","Componenets/ContactList/ContactListItem/ContactListItem.jsx","Componenets/ContactList/ContactList.jsx","Componenets/Filter/FilterStyled.jsx","Componenets/Filter/FIlter.jsx","Componenets/Form/FormStyled.jsx","Componenets/Form/Form.jsx","Componenets/Section/SectionStyled.jsx","Componenets/Section/Section.jsx","style/GlobalStyle.jsx","App.js","index.js"],"names":["ContactWrapper","styled","ul","ContactItem","li","ContactListItem","id","name","number","onDeleteContact","className","onClick","ContactList","contacts","map","FilterWrapper","label","FIlter","filter","onChange","type","value","FormWrapper","form","Form","state","handleChangeInput","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","uuidv4","reset","this","pattern","title","required","Component","SectionContainer","section","Section","children","createGlobalStyle","App","contactId","prevState","contact","data","find","item","alert","onChangeFilter","getVisibleContacs","normalizedFilter","toLowerCase","includes","visibleContacts","GlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5be288e5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\nexport const ContactWrapper = styled.ul`\r\n    \r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 4;\r\n     \r\n`;","import styled from \"styled-components\";\r\n\r\n\r\nexport const ContactItem = styled.li`\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 24px;\r\n\r\n    .buttonDelete{\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        width: 100px;\r\n        height: 20px;\r\n        line-height: 16px;\r\n        border-radius: 45px;\r\n        margin: 10px 20px;\r\n        font-size: 10px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\r\n        transition: .3s;\r\n    }\r\n    .buttonDelete:hover {\r\n        background: #e53a2e;\r\n        box-shadow: 0 15px 20px rgba(46, 229, 157, .4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n    }\r\n        \r\n`;","import { ContactItem } from \"./ContactListItemStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n    return (\r\n        <ContactItem>\r\n            <p>{name}: {number}</p>\r\n            <button className=\"buttonDelete\" onClick={() => onDeleteContact(id)}>Delete</button>\r\n        </ContactItem>\r\n    );\r\n}\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n}","import PropTypes from 'prop-types';\r\nimport { ContactWrapper } from \"./ContactListStyled\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ContactWrapper>\r\n            {contacts.map(({ id, name, number }) => <ContactListItem key={id} name={name} number={number} id={id} onDeleteContact={onDeleteContact} />)}\r\n        </ContactWrapper>\r\n    )\r\n}\r\n\r\nexport default ContactList;\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func,\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const FilterWrapper = styled.label`\r\n\r\n    padding: 15px;\r\n    display: flex;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    flex-grow: 1;\r\n    \r\n\r\n    .input {\r\n        display:block;\r\n        font-size: 20px;\r\n        width: 200px;\r\n        width:450;\r\n        margin:10px 0;\r\n        background-color: #fafafa;\r\n        border:0;\r\n        border-radius: 5px;\r\n        box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n        transition: .3s box-shadow;\r\n    }\r\n\r\n    .input:hover {\r\n        box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n    }\r\n`;","import { FilterWrapper } from \"./FilterStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FIlter = ({ filter, onChange }) => {\r\n    return (\r\n        <FilterWrapper>\r\n            Find contact by name\r\n            <input className=\"input\" type=\"text\" value={filter} onChange={onChange} />\r\n        </FilterWrapper>\r\n    );\r\n}\r\n\r\nexport default FIlter;\r\n\r\nFIlter.propTypes = {\r\n    filter: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const FormWrapper = styled.form`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n\r\n    label {\r\n        padding: 15px;\r\n        display: flex;\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n\r\n\r\n    .input {\r\n        display:block;\r\n        font-size: 20px;\r\n        width: 200px;\r\n        width:450;\r\n        margin:10px 0;\r\n        background-color: #fafafa;\r\n        border:0;\r\n        border-radius: 5px;\r\n        box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n        transition: .3s box-shadow;\r\n    }\r\n\r\n    .input:hover {\r\n        box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n    }\r\n\r\n    .buttonSubmit {\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        width: 175px;\r\n        height: 45px;\r\n        line-height: 45px;\r\n        border-radius: 45px;\r\n        margin: 10px 20px;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 11px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\r\n        transition: .3s;\r\n    }\r\n    .buttonSubmit:hover {\r\n        background: #2EE59D;\r\n        box-shadow: 0 15px 20px rgba(46, 229, 157, .4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n    }\r\n`;","import { FormWrapper } from \"./FormStyled\";\r\nimport { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChangeInput = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit({ ...this.state, id: uuidv4() });\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n\r\n            <FormWrapper onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Name\r\n                    <input\r\n                        className=\"input\"\r\n                        onChange={this.handleChangeInput}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        value={name}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Number\r\n                    <input\r\n                        className=\"input\"\r\n                        onChange={this.handleChangeInput}\r\n                        value={number}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className=\"buttonSubmit\">Add contact</button>\r\n            </FormWrapper>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form","import styled from \"styled-components\";\r\n\r\n\r\nexport const SectionContainer = styled.section`\r\n    padding: 20px;\r\n    background-color: #23e5ecf0;\r\n    width: 800px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    text-align: center;\r\n\r\n    .contactsWrapper {\r\n        display:flex;\r\n        align-content: stretch\r\n    }\r\n\r\n    .title {\r\n        text-align: center;\r\n        align-items: flex-start;\r\n    }\r\n`;","import { SectionContainer } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <SectionContainer>\r\n            <h1 className=\"title\">{title}</h1>\r\n            {children}\r\n        </SectionContainer>\r\n    );\r\n}\r\n\r\nexport default Section;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\nul,\r\nol {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.list {\r\n  list-style: none;\r\n}\r\n\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n`;\r\n","import { Component } from 'react';\nimport ContactList from './Componenets/ContactList/ContactList';\nimport FIlter from './Componenets/Filter/FIlter';\nimport Form from './Componenets/Form/Form';\nimport Section from './Componenets/Section/Section';\nimport { contacts } from './contacts.json';\nimport GlobalStyles from \"../src/style/GlobalStyle\";\n\n\nclass App extends Component {\n  state = {\n    contacts,\n    filter: ''\n\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }));\n  };\n\n  handleSubmit = data => {\n    this.setState(prevState => {\n      const findName = prevState.contacts.find(item => item.name === data.name);\n      if (!findName) {\n        return { contacts: [data, ...prevState.contacts] }\n      } else {\n        return alert(`${data.name} is already in contacts`)\n      }\n    }\n    );\n  };\n\n  onChangeFilter = event => {\n    this.setState({ filter: event.currentTarget.value })\n  };\n\n\n  getVisibleContacs = () => {\n    const { filter, contacts } = this.state\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter))\n  };\n\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacs();\n\n    return (\n      <>\n        <GlobalStyles />\n        <Section title={'Phonebook'}>\n          <Form onSubmit={this.handleSubmit} />\n        </Section>\n        <Section title={'Contacts'}>\n          <div className=\"contactsWrapper\">\n            <FIlter filter={filter} onChange={this.onChangeFilter} />\n            <ContactList contacts={visibleContacts} onDeleteContact={this.onDeleteContact} />\n          </div>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}